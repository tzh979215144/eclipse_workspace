/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-09-25 08:15:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<title>用户登录</title>\r\n");
      out.write("<link href=\"images/login.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script src=\"jquery/jquery-2.1.1.js\"></script>\r\n");
      out.write("<script src=\"jquery/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script src=\"jquery/jquery.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("function check(){\r\n");
      out.write("\tvar username=document.getElementById(\"username\").value;\r\n");
      out.write("\tvar password=document.getElementById(\"password\").value;\r\n");
      out.write("    alert(\"username\"+username);\r\n");
      out.write("    if(username==null||username==\"\"){\r\n");
      out.write("    \treturn false;\r\n");
      out.write("    }else if(password==null||passowrd==\"\"){\r\n");
      out.write("    \treturn false;\r\n");
      out.write("    }else{\r\n");
      out.write("    \treturn true;\r\n");
      out.write("    }}\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"login\">\r\n");
      out.write("\t\r\n");
      out.write("\t     <div id=\"top\">\r\n");
      out.write("\t\t      <div id=\"top_left\"><img src=\"images/login_03.gif\" /></div>\r\n");
      out.write("\t\t\t  <div id=\"top_center\"></div>\r\n");
      out.write("\t\t </div>\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t <div id=\"center\">\r\n");
      out.write("\t\t      <div id=\"center_left\"></div>\r\n");
      out.write("\t\t\t  <div id=\"center_middle\">\r\n");
      out.write("\t\t\t  <form  id=\"loginForm\" name=\"loginForm\">\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><div align=\"right\" >User Name</div></td>\r\n");
      out.write("                <td><input type=\"text\" id=\"username\" name=\"username\"/></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><div align=\"right\">Password</div></td>\r\n");
      out.write("                <td><input type=\"password\" name=\"password\"/></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><input type=\"button\" id=\"btn1\" name=\"submit\" value=\"提交\"/></td>\r\n");
      out.write("                <td><input type=\"reset\" id=\"btn2\" name=\"reset\" value=\"重置\"/></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  <div id=\"center_right\"></div>\t\t \r\n");
      out.write("\t\t </div>\r\n");
      out.write("\t\t <div id=\"down\">\r\n");
      out.write("\t\t      <div id=\"down_left\">\r\n");
      out.write("\t\t\t      <div id=\"inf\">\r\n");
      out.write("                       <span class=\"inf_text\">版本信息</span>\r\n");
      out.write("\t\t\t\t\t   <span class=\"copyright\">管理信息系统 2008 v2.0</span>\r\n");
      out.write("\t\t\t      </div>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  <div id=\"down_center\"></div>\t\t \r\n");
      out.write("\t\t </div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$('#btn1').click(function(){\r\n");
      out.write("\t\tvar user = {\r\n");
      out.write("\t\t\t\tusername:$(\"#username\").val(),\r\n");
      out.write("\t\t\t     password:$(\"input[name='password']\").val(),\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t    $.ajax({\r\n");
      out.write("\t        cache:true,//保留缓存数据\r\n");
      out.write("\t        type:\"POST\",//为post请求\r\n");
      out.write("\t        url:\"login\",//这是我在后台接受数据的文件名\r\n");
      out.write("\t       // data:$('#loginForm').serialize(),//将该表单序列化\r\n");
      out.write("\t       data:user,\r\n");
      out.write("\t       dataType:'json',\r\n");
      out.write("\t        async:false,//设置成true，这标志着在请求开始后，其他代码依然能够执行。如果把这个选项设置成false，这意味着所有的请求都不再是异步的了，这也会导致浏览器被锁死\r\n");
      out.write("\t        error:function(request){//请求失败之后的操作\r\n");
      out.write("\t            alert(\"请求失败！\");\r\n");
      out.write("\t        },\r\n");
      out.write("\t        success:function(data){//请求成功之后的操作 \r\n");
      out.write("\r\n");
      out.write("\t        \t alert(\"请求成功！\"+data.username);\r\n");
      out.write("\t        \t alert(\"请求成功！\"+data.password);\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \t      //   $(\"#content-wrapper\").html(data);\r\n");
      out.write("\t        \tdocument.getElementById(\"str\").value=data.msg2;\r\n");
      out.write("\t        //你要跳转的url路径 \r\n");
      out.write("\t        window.location.href=\"");
      out.print(request.getContextPath());
      out.write("/success.jsp?msg='成功跳转'\";\r\n");
      out.write("\t        // request.getContextPath()/success.jsp \r\n");
      out.write("\t           // console.log(\"success\");\r\n");
      out.write("\t        }\r\n");
      out.write("\t    });\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
