/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-09-28 09:22:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bank;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.zhoukan.bean.user_info;

public final class showAcc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.zhoukan.bean.user_info");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<!-- 最新版本的 Bootstrap 核心 CSS 文件 -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!-- 可选的 Bootstrap 主题文件（一般不用引入） -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\" integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!-- 最新的 Bootstrap 核心 JavaScript 文件 -->\n");
      out.write("<script src=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"></script>\n");
      out.write("<title>账户销户-确认信息</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<table class=\"table table-hover\">\n");
      out.write("  <tr>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t用户号：");
      out.print(((user_info)session.getAttribute("user")).getCLIENT_NO() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t证件类型：");
      out.print(((user_info)session.getAttribute("user")).getGLOBAL_ID_TYPE() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t证件号码：");
      out.print(((user_info)session.getAttribute("user")).getGLOBAL_ID() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t国籍：");
      out.print(((user_info)session.getAttribute("user")).getCountry() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t客户类型：");
      out.print(((user_info)session.getAttribute("user")).getCLIENT_TYPE() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t客户分类：");
      out.print(((user_info)session.getAttribute("user")).getFM_CLIENT_TYPE() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t姓名：");
      out.print(((user_info)session.getAttribute("user")).getName() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t性别：");
      out.print(((user_info)session.getAttribute("user")).getSex() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  </tr>\n");
      out.write(" <tr>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t电话：");
      out.print(((user_info)session.getAttribute("user")).getCLIENT_TEL() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  \t\t<td>\n");
      out.write("  \t\t地址：");
      out.print(((user_info)session.getAttribute("user")).getLOCATION() );
      out.write("\n");
      out.write("  \t\t</td>\n");
      out.write("  </tr>\n");
      out.write("</form>\n");
      out.write("<form class=\"form-inline\" action=\"/TELLER2.0/dropAcc\" method=\"post\">\n");
      out.write("\t<br><br>\n");
      out.write("  <div class=\"form-group has-success has-feedback\" >\n");
      out.write("  <label class=\"control-label\" for=\"inputGroupSuccess1\">请确定销户账户信息！</label>\n");
      out.write("  <div class=\"input-group\">\n");
      out.write("    <span class=\"input-group-addon\">客户编号：</span>\n");
      out.write("    <input   readonly=\"readonly\" value=");
      out.print(((user_info)session.getAttribute("user")).getCLIENT_NO() );
      out.write(" type=\"text\" name=\"CLIENT_NO\" class=\"form-control\" id=\"inputGroupSuccess1\" aria-describedby=\"inputGroupSuccess1Status\">\n");
      out.write("  </div>\n");
      out.write("  <span class=\"glyphicon glyphicon-ok form-control-feedback\" aria-hidden=\"true\"></span>\n");
      out.write("  <span id=\"inputGroupSuccess1Status\" class=\"sr-only\">(success)</span>\n");
      out.write("</div>\n");
      out.write(" <input type=\"hidden\" name=\"flag\" value=\"2\"></input>\n");
      out.write("  <input type=\"submit\" class=\"btn btn-lg btn-success\" value=\"确认删除\"></input>\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
