/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-09-21 01:54:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.teller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"expires\" content=\"0\">    \r\n");
      out.write("\t<meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\r\n");
      out.write("\t<meta http-equiv=\"description\" content=\"This is my page\">\r\n");
      out.write("\t\r\n");
      out.write("   <title>SmarTeller</title>\r\n");
      out.write("   <style type=\"text/css\">\r\n");
      out.write("* {margin:0px;padding:0px;}\r\n");
      out.write("html,body {height:100%;}\r\n");
      out.write("body {font-size:14px; line-height:24px;}\r\n");
      out.write("#tip {position: absolute;right: 0px;bottom: 0px;height: 0px;width: 180px;border: 1px solid #CCCCCC;background-color: #eeeeee;padding: 1px;overflow:hidden;display:none;font-size:12px;z-index:10;}\r\n");
      out.write("#tip p {padding:6px;}\r\n");
      out.write("#tip h1,#detail h1 {font-size:14px;height:25px;line-height:25px;background-color:#0066CC;color:#FFFFFF;padding:0px 3px 0px 3px;}\r\n");
      out.write("#tip h1 a,#detail h1 a {float:right;text-decoration:none;color:#FFFFFF;}\r\n");
      out.write("#shadow {position:absolute;width:100%;height:100%;background:#CCCCCC;-moz-opacity:0.5;filter:Alpha(Opacity=50);opacity: 0.8;z-index:11;display:none;overflow:hidden;}\r\n");
      out.write("#detail {width:500px;height:200px;border:3px double #ccc;background-color:#FFFFFF;position:absolute;z-index:30;display:none;left:30%;top:30%}\r\n");
      out.write("</style>\r\n");
      out.write("   \r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("var handle;\r\n");
      out.write("function start()\r\n");
      out.write("{\r\n");
      out.write("var obj = document.getElementById(\"tip\");\r\n");
      out.write("if (parseInt(obj.style.height)==0)\r\n");
      out.write("{ obj.style.display=\"block\";\r\n");
      out.write("handle = setInterval(\"changeH('up')\",2);\r\n");
      out.write("}else\r\n");
      out.write("{\r\n");
      out.write("     handle = setInterval(\"changeH('down')\",2) \r\n");
      out.write("} \r\n");
      out.write("}\r\n");
      out.write("function changeH(str)\r\n");
      out.write("{\r\n");
      out.write("var obj = document.getElementById(\"tip\");\r\n");
      out.write("if(str==\"up\")\r\n");
      out.write("{\r\n");
      out.write("if (parseInt(obj.style.height)>200)\r\n");
      out.write("   clearInterval(handle);\r\n");
      out.write("else\r\n");
      out.write("   obj.style.height=(parseInt(obj.style.height)+8).toString()+\"px\";\r\n");
      out.write("}\r\n");
      out.write("if(str==\"down\")\r\n");
      out.write("{\r\n");
      out.write("if (parseInt(obj.style.height)<8)\r\n");
      out.write("{ clearInterval(handle);\r\n");
      out.write("   obj.style.display=\"none\";\r\n");
      out.write("}\r\n");
      out.write("else \r\n");
      out.write("   obj.style.height=(parseInt(obj.style.height)-8).toString()+\"px\"; \r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("function showwin()\r\n");
      out.write("{\r\n");
      out.write("document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n");
      out.write("start();\r\n");
      out.write("document.getElementById(\"shadow\").style.display=\"block\";\r\n");
      out.write("document.getElementById(\"detail\").style.display=\"block\"; \r\n");
      out.write("}\r\n");
      out.write("function recover()\r\n");
      out.write("{\r\n");
      out.write("document.getElementsByTagName(\"html\")[0].style.overflow = \"auto\";\r\n");
      out.write("document.getElementById(\"shadow\").style.display=\"none\";\r\n");
      out.write("document.getElementById(\"detail\").style.display=\"none\"; \r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("  </head>\r\n");
      out.write("<frameset rows=\"64,*\"  frameborder=\"NO\" border=\"0\" framespacing=\"0\">\r\n");
      out.write("\t<frame src=\"/TELLER2.0/teller/admin_top.jsp\" noresize=\"noresize\" frameborder=\"0\" name=\"topFrame\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" target=\"_self\" />\r\n");
      out.write("\t  <frameset cols=\"184,*\"  rows=\"*\" id=\"frame\">\r\n");
      out.write("\t\t<frame src=\"/TELLER2.0/teller/left.jsp\" name=\"leftFrame\" noresize=\"noresize\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" scrolling=\"no\" target=\"main\" />\r\n");
      out.write("\t\t<frameset rows=\"*,80\"  frameborder=\"NO\" border=\"0\" framespacing=\"0\">\r\n");
      out.write("\t\t\t<frame src=\"/TELLER2.0/teller/right.jsp\" name=\"main\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" scrolling=\"auto\" target=\"_self\" />\r\n");
      out.write("\t\t\t<frame src=\"/TELLER2.0/teller/mess.jsp\" name=\"mess\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\" scrolling=\"auto\" target=\"_self\" id=\"messFrame\"/>\r\n");
      out.write("\t\t</frameset>\t\r\n");
      out.write("\t </frameset>\r\n");
      out.write("\t</frameset>\r\n");
      out.write(" <noframes>\r\n");
      out.write(" <body>\r\n");
      out.write("\r\n");
      out.write(" </body>\r\n");
      out.write("  </noframes>  \r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
