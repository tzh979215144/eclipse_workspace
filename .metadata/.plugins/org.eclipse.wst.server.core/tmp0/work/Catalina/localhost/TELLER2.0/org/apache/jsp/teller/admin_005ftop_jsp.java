/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-09-21 01:54:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.teller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class admin_005ftop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<base href=\"");
      out.print(basePath );
      out.write("\">\r\n");
      out.write("<head>\r\n");
      out.write("<title> - 管理页面 </title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar HttpRequest = null;\r\n");
      out.write("\t\r\n");
      out.write("\tfunction ajaxInitEngine(){\r\n");
      out.write("\t\tif(window.XMLHttpRequest){\r\n");
      out.write("\t\t\tHttpRequest = new XMLHttpRequest();\r\n");
      out.write("\t\t}else if (window.ActiveXObject) { // IE浏览器\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\tHttpRequest = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n");
      out.write("\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\tHttpRequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t\t\t} catch (e) {alert('初始化Ajax引擎失败！');}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction sendRequest(){\r\n");
      out.write("\t\tajaxInitEngine();\r\n");
      out.write("\t\tHttpRequest.open(\"GET\",\"loginDown.do?loginId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginBean.USER_NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",true);\r\n");
      out.write("\t\t//HttpRequest.onreadystatechange=changestate;\r\n");
      out.write("\t\tHttpRequest.send(null);\r\n");
      out.write("\t}\r\n");
      out.write(" </script>\r\n");
      out.write("<script language=JavaScript>\r\n");
      out.write("function logout(){\r\n");
      out.write("\tvar falg = confirm(\"您确定要退出系统吗？退出系统将自动签退！\");\r\n");
      out.write("\tif (falg){\r\n");
      out.write("\t\t//top.location = \"/TELLER2.0/index.jsp\";\r\n");
      out.write("\t\tsendRequest();\r\n");
      out.write("\t\ttop.window.close();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<link href=\"images/skin.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    <meta http-equiv=Content-Type content=text/html;charset=gb2312>\r\n");
      out.write("\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"expires\" content=\"0\">    \r\n");
      out.write("\t<meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\r\n");
      out.write("\t<meta http-equiv=\"description\" content=\"This is my page\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\r\n");
      out.write("\t-->\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body leftmargin=\"0\" topmargin=\"0\"  onLoad=\"startclock()\">\r\n");
      out.write("    <script language=\"JavaScript\">\r\n");
      out.write("<!-- Hide\r\n");
      out.write("  var timerID = null\r\n");
      out.write("  var timerRunning = false\r\n");
      out.write("  function MakeArray(size) \r\n");
      out.write("  {\r\n");
      out.write("  this.length = size;\r\n");
      out.write("  for(var i = 1; i <= size; i++)\r\n");
      out.write("  {\r\n");
      out.write("  this[i] = \"\";\r\n");
      out.write("  }\r\n");
      out.write("  return this;\r\n");
      out.write("  }\r\n");
      out.write("  function stopclock (){\r\n");
      out.write("  if(timerRunning)\r\n");
      out.write("  clearTimeout(timerID);\r\n");
      out.write("  timerRunning = false\r\n");
      out.write("  }\r\n");
      out.write("  function showtime () {\r\n");
      out.write("  var now = new Date();\r\n");
      out.write("  var year = now.getYear();\r\n");
      out.write("  var month = now.getMonth() + 1;\r\n");
      out.write("  var date = now.getDate();\r\n");
      out.write("  var hours = now.getHours();\r\n");
      out.write("  var minutes = now.getMinutes();\r\n");
      out.write("  var seconds = now.getSeconds();\r\n");
      out.write("  var day = now.getDay();\r\n");
      out.write("  Day = new MakeArray(7);\r\n");
      out.write("  Day[0]=\"星期天\";\r\n");
      out.write("  Day[1]=\"星期一\";\r\n");
      out.write("  Day[2]=\"星期二\";\r\n");
      out.write("  Day[3]=\"星期三\";\r\n");
      out.write("  Day[4]=\"星期四\";\r\n");
      out.write("  Day[5]=\"星期五\";\r\n");
      out.write("  Day[6]=\"星期六\";\r\n");
      out.write("  var timeValue = \"\";\r\n");
      out.write("  timeValue += year + \"年\";\r\n");
      out.write("  timeValue += ((month < 10) ? \"0\" : \"\") + month + \"月\";\r\n");
      out.write("  timeValue += date + \"日  \";\r\n");
      out.write("  timeValue += (Day[day]) + \"  \";\r\n");
      out.write("  timeValue += ((hours <= 12) ? hours : hours - 12);\r\n");
      out.write("  timeValue += ((minutes < 10) ? \":0\" : \":\") + minutes;\r\n");
      out.write("  timeValue += ((seconds < 10) ? \":0\" : \":\") + seconds;\r\n");
      out.write("  timeValue += (hours < 12) ? \"上午\" : \"下午\";\r\n");
      out.write("  document.jsfrm.face.value = timeValue;\r\n");
      out.write("  timerID = setTimeout(\"showtime()\",1000);\r\n");
      out.write("  timerRunning = true\r\n");
      out.write("  }\r\n");
      out.write("  function startclock () {\r\n");
      out.write("  stopclock();\r\n");
      out.write("  showtime()\r\n");
      out.write("  }\r\n");
      out.write("  //-->\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <form name='jsfrm'>\r\n");
      out.write("<table width=\"100%\" height=\"64\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"admin_topbg\" >\r\n");
      out.write("\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td width=\"50%\" height=\"64\"><img src=\"images/logo.gif\" width=\"262\" height=\"64\"></td>\r\n");
      out.write("    <td width=\"50%\" valign=\"top\"><table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("      <tr style=\"margin: 0px\">\r\n");
      out.write("        <td width=\"89%\" height=\"38\" class=\"admin_txt\"><p><b>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 登录柜员：");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginBean.USER_NAME }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" &nbsp;登录号：");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginBean.LOGIN_ID }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&nbsp; 网点号：");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginBean.NET_ID }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&nbsp; &nbsp;&nbsp;&nbsp;<img src=\"images/pic14.gif\" width=\"20\" height=\"15\">\r\n");
      out.write("<input type=text name='face' size=34 style=\"background-color:transparent; border: none ;color:#FFF\">\r\n");
      out.write("        </b></p></td>\r\n");
      out.write("        <td width=\"10%\"><a href=\"teller/admin_top.jsp\" target=\"_self\" onClick=\"logout();\"><img src=\"images/out.gif\" alt=\"安全退出\" width=\"46\" height=\"20\" border=\"0\"></a></td>\r\n");
      out.write("        <td width=\"1%\">&nbsp;</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"19\" colspan=\"3\">&nbsp;</td>   \r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
