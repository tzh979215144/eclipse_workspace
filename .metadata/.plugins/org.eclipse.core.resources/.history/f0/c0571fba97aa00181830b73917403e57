package com.bjsxt.sorm.core;

import java.util.List;

/**
 * 
 * 负责查询（对外提供服务的核心类）
 * @author tzh
 *
 */
@SuppressWarnings("all")//压制警告
public interface Query {
	//增删改一类，查询一类
	
	/**
	 * 直接执行一个ＤＭＬ语句
	 * @param sql　　sql 语句
	 * @param params 参数
	 * @return	执行sql语句后影响的记录行数
	 */
	public int executeDML(String sql,Object[] params) ;
	
	/**
	 * 讲一个对象存储到数据库中
	 * @param obj　要存储的对象
	 */
	public void insert (Object obj);
	/**
	 * 删除clazz表示类对应的表中的记录（指定主键值id的记录）
	 * @param clazz　跟表对应的类的Class对象
	 * @param id　主键的值
	 * @return
	 */
	public void delete(Class clazz, int id);
	/**
	 * 删除对象在数据库中对应的记录（对象所在的类对应到表，对象的主键的值对应到记录）
	 * @param obj
	 */
	public void delete(Object obj);
	
	/**
	 * 根系对象对应的记录，并且只更新指定的字段的值
	 * @param obj　所要更新的对象
	 * @param fieldNames	　所要更新的属性列表
	 * @return	执行Ｓｑｌ语句后更新记录的行数
	 */
	public int update(Object obj,String[] fieldNames);
	
	/**
	 * 查询返回多行对象，并将每行记录到ｃｌａｚｚ指定的类的对象中
	 * @param sql　查询语句
	 * @param clazz 封装数据的javabean类的Class对象
	 * @param params ｓｑｌ的参数
	 * @return　查询到的结果Ｌｉｓｔ
	 */
	public List queryRows(String sql,Class clazz,Object[] params);
	
	/**
	 * 查询返回一行对象，并将每行记录到ｃｌａｚｚ指定的类的对象中
	 * @param sql　查询语句
	 * @param clazz 封装数据的javabean类的Class对象
	 * @param params ｓｑｌ的参数
	 * @return　查询到的结果.一行:Object
	 */
	public Object queryUniqueRow(String sql,Class clazz,Object[] params);
	
	/**
	 * 查询返回一个值（一行一列），并将该值返回
	 * @param sql　查询语句
	 * @param params ｓｑｌ的参数
	 * @return　查询到的结果
	 */
	public Object queryValue(String sql,Object[] params);
	
	/**
	 * 查询返回一个Number（一行一列），并将该Number返回
	 * @param sql　查询语句
	 * @param params ｓｑｌ的参数
	 * @return　查询到的结果
	 */
	public Number queryNumber(String sql,Object[] params);//Number 就包含了 byte, double, float, int, long, and short
	
}
